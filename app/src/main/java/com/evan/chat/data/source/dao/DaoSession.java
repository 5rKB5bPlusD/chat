package com.evan.chat.data.source.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.evan.chat.logreg.domain.model.User;
import com.evan.chat.gen.RequestUrl;
import com.evan.chat.gen.LogUser;
import com.evan.chat.gen.Chat;

import com.evan.chat.data.source.dao.UserDao;
import com.evan.chat.data.source.dao.RequestUrlDao;
import com.evan.chat.data.source.dao.LogUserDao;
import com.evan.chat.data.source.dao.ChatDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig requestUrlDaoConfig;
    private final DaoConfig logUserDaoConfig;
    private final DaoConfig chatDaoConfig;

    private final UserDao userDao;
    private final RequestUrlDao requestUrlDao;
    private final LogUserDao logUserDao;
    private final ChatDao chatDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        requestUrlDaoConfig = daoConfigMap.get(RequestUrlDao.class).clone();
        requestUrlDaoConfig.initIdentityScope(type);

        logUserDaoConfig = daoConfigMap.get(LogUserDao.class).clone();
        logUserDaoConfig.initIdentityScope(type);

        chatDaoConfig = daoConfigMap.get(ChatDao.class).clone();
        chatDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        requestUrlDao = new RequestUrlDao(requestUrlDaoConfig, this);
        logUserDao = new LogUserDao(logUserDaoConfig, this);
        chatDao = new ChatDao(chatDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(RequestUrl.class, requestUrlDao);
        registerDao(LogUser.class, logUserDao);
        registerDao(Chat.class, chatDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        requestUrlDaoConfig.clearIdentityScope();
        logUserDaoConfig.clearIdentityScope();
        chatDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public RequestUrlDao getRequestUrlDao() {
        return requestUrlDao;
    }

    public LogUserDao getLogUserDao() {
        return logUserDao;
    }

    public ChatDao getChatDao() {
        return chatDao;
    }

}
